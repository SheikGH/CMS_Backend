// <auto-generated />
using CMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240529160821_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CMS.Core.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "123 Main St",
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "John@123",
                            PasswordKey = "John@123",
                            Phone = "1234567890"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "456 Elm St",
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "Jane@123",
                            PasswordKey = "Jane@123",
                            Phone = "0987654321"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "Kulas Light",
                            Email = "Sincere@example.com",
                            FirstName = "Leanne",
                            LastName = "Graham",
                            Password = "Leanne@123",
                            PasswordKey = "Leanne@123",
                            Phone = "17707368031"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "Suite 879",
                            Email = "dennis@example.com",
                            FirstName = "Dennis",
                            LastName = "Schulist",
                            Password = "Dennis@123",
                            PasswordKey = "Dennis@123",
                            Phone = "098-765-4321"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "Proactive didactic contingency",
                            Email = "glenna@example.com",
                            FirstName = "Glenna",
                            LastName = "Reichert",
                            Password = "Glenna@123",
                            PasswordKey = "Glenna@123",
                            Phone = "123-456-7890"
                        },
                        new
                        {
                            CustomerId = 6,
                            Address = "Wisokyburgh",
                            Email = "ervin@example.com",
                            FirstName = "Ervin",
                            LastName = "Howell",
                            Password = "Ervin@123",
                            PasswordKey = "Ervin@123",
                            Phone = "0987654321"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
